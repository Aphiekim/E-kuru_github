<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scit.ekuru.dao.UserMapper">

<insert id="insertUser" parameterType="user">
	insert into e_user_tb(userId, userPw, userNm, userType) values(#{userId}, #{userPw}, #{userNm}, #{userType})
</insert>

<select id="loginUser" parameterType="user" resultType="user">
	select userid, userpw, usernm, useraddr, userzip, userphone, userconfirm, usertype, userpoint
	from e_user_tb
	where userId = #{userId} and userPw = #{userPw}
</select>

<select id="selectUser" parameterType="String" resultType="user">
	select userid, userpw, usernm, useraddr, userzip, userphone, userconfirm, usertype, userpoint, authkey
	from e_user_tb
	where userId = #{userId}
</select>

<select id="selectPoint" parameterType="user" resultType="hashmap">
	select
		ep.pointChargeNum as pontChargeNum,
		ep.userId as userId,
		pp.pointprodname as pointprodname,
		to_char(ep.pointChargedIndate, 'YYYY-MM-DD') as pointchargedindate

	from e_point_tb ep join e_pointproduct_tb pp on ep.pointprodnum = pp.pointprodnum
	where ep.userId like #{userId}
	order by ep.pointChargeNum
</select>

<update id="modifyUser" parameterType="user">
	update e_user_tb
	set
	 userAddr = #{userAddr},
	 userZip = #{userZip},
	 userPhone = #{userPhone}
	where userId = #{userId}

</update>

<update id="modifyAuthkey" parameterType="user">
	update e_user_tb
	set authkey = #{authkey}
	where userId = #{userId}

</update>

<update id="updateConfirm" parameterType="user">
	update e_user_tb
	set userConfirm = #{userConfirm}
	where userId = #{userId}

</update>

<select id="selectCart" parameterType="String" resultType="hashmap">
	select
		c.cartprodnum as CARTPRODNUM,
		c.prodnum as PRODNUM,
		e.userid as USERID,
		pd.prodtitle as PRODTITLE,
		cc.chname as CHNAME,
		pd.prodprice as PRODPRICE,
		c.cartprodea as CARTPRODEA
	from e_user_tb e join e_cart_tb c on e.userid = c.userid, e_channel_tb cc join e_product_tb pd on cc.chnum = pd.chnum
	where e.userId = #{userId}
</select>
<select id="selectPointPricing" parameterType="int" resultType="pointprod">
select
	pointProdNum
	,pointProdName
	,priceWon
	,priceYen
from
	e_pointProduct_tb
where
	pointProdNum = #{pointProdNum}
</select>
<update id="updatePoint" parameterType="user">
update
	e_user_tb
set
	userPoint = #{userPoint}
where
	userId = #{userId}
</update>
<insert id="insertPoint" parameterType="point">
insert
into e_point_tb(
	pointChargeNum
	,userId
	,pointProdNum
)values(
	point_seq.nextval
	,#{userId}
	,#{pointProdNum}
)
</insert>

<select id="selectChatRoom" parameterType="chat" resultType="hashmap">
select
	cr.chatnum as CHATNUM,
	cr.userid as USERID,
	cr.chnum as CHNUM,
	chh.chname as CHNAME,
	ca.content as CONTENT
from
	e_chattingroom_tb cr join e_channel_tb chh on cr.chnum = chh.chnum join e_chat_tb ca on cr.chatnum = ca.roomnum

<choose>
	<when test="userType == 1">
		<where>
			chh.chNum = #{chNum}
		</where>
	</when>
	<otherwise>
		<where>
			cr.userId = #{userId}
		</where>
	</otherwise>
</choose>

</select>

<select id="selectChat" parameterType="int" resultType="chat">
select
	roomnum as ROOMNUM,
	content as CONTENT
from e_chat_tb
where roomnum = #{chatNum}
</select>

<update id="updateChat" parameterType="chat">
update
	e_chat_tb
set
	content = #{content}
where
	roomnum = #{chatNum}
</update>

<select id="selectChUser1" parameterType="String" resultType="chat">
select

	ch.CHNUM as CHNUM,
	us.USERTYPE as USERTYPE,
	us.USERID as USERID

from e_channel_tb ch join e_user_tb us on ch.chid = us.userid join e_chattingroom_tb cr on cr.chnum = ch.chnum
where us.USERID = #{userId}
</select>

<select id="selectChUser2" parameterType="String" resultType="chat">
select
	userId as userId,
	userType as userType
from
	e_user_tb
where userid = #{userId}
</select>

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> master
<!-- 거래 내역 가져오기 -->
<select id = "dealHistory" parameterType="String" resultType="hashmap">
	SELECT
		d.SPECNUM as SPECNUM,
		d.DEALCODE as DEALCODE,
		e.USERID as USERID,
		d.DEALSTATE as DEALSTATE,
		d.DEALINDATE as DEALINDATE
	FROM
		E_DEALHISTORY_TB d, E_SPEC_TB e
	WHERE
		d.SPECNUM = e.SPECNUM
	AND
		e.USERID = #{userId}
</select>

<<<<<<< HEAD
=======
=======
>>>>>>> master
<!-- 상품 전체 리스트 -->
<select id="selectProdList" resultType="hashmap">
	SELECT
		PRODNUM as PRODNUM,
		USERID as USERID,
		CHNUM as CHNUM,
		PRODCATEGORY as PRODCATEGORY,
		PRODTITLE as PRODTITLE,
		PRODSTOCK as PRODSTOCK,
		PRODPRICE as PRODSTOCK,
		PRODCONTENT as PRODSTOCK,
		PRODINDATE as PRODINDATE
	FROM
		E_PRODUCT_TB
</select>
<<<<<<< HEAD
>>>>>>> 001b3bf2c327ee130ecb64128adcc82cc8d7297d
=======
>>>>>>> master
</mapper>
