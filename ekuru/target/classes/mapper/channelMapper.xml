<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scit.ekuru.dao.ChannelMapper">

<select id="getListAll" resultType="channel">
	SELECT
		CHNUM,
		CHID,
		CHNAME,
		CHPROFILE,
		CHFOLLOWER,
		CHINTRO,
		CHINDATE
	FROM
		E_CHANNEL_TB
</select>

<!-- 채널 정보 -->
<select id="chRead" parameterType="channel" resultType="channel">
	SELECT
		CHNUM,
		CHID,
		CHNAME,
		CHPROFILE,
		CHFOLLOWER,
		CHINTRO,
		CHINDATE
	FROM
		E_CHANNEL_TB
	WHERE
	    chId = #{chId}

</select>

<!-- 상품 전체 리스트 -->
<select id="getProdList" parameterType="channel" resultType="product">
	SELECT
		PRODNUM,
		USERID,
		CHNUM,
		PRODCATEGORY,
		PRODTITLE,
		PRODSTOCK,
		PRODPRICE,
		PRODCONTENT,
		PRODORIGINALPIC1,
		PRODORIGINALPIC2,
		PRODORIGINALPIC3,
		PRODSAVEDPIC1,
		PRODSAVEDPIC2,
		PRODSAVEDPIC3,
		PRODINDATE
	FROM
		E_PRODUCT_TB
	where
	    USERID = #{chId}
</select>

<!-- 각 물품 가져오기 -->
<select id="getProdEach" parameterType="product" resultType="product">
	SELECT
		PRODNUM,
		USERID,
		CHNUM,
		PRODCATEGORY,
		PRODTITLE,
		PRODSTOCK,
		PRODPRICE,
		PRODCONTENT,
		PRODORIGINALPIC1,
		PRODORIGINALPIC2,
		PRODORIGINALPIC3,
		PRODSAVEDPIC1,
		PRODSAVEDPIC2,
		PRODSAVEDPIC3,
		PRODINDATE
	FROM
		E_PRODUCT_TB
	where
	    PRODNUM = #{prodNum}

</select>

<!-- 상품 등록 -->
<insert id="ch_posters_Write" parameterType="product">
INSERT INTO
	E_PRODUCT_TB (
		PRODNUM,
		USERID,
		CHNUM,
		PRODCATEGORY,
		PRODTITLE,
		PRODSTOCK,
		PRODPRICE,
		PRODCONTENT,
		PRODORIGINALPIC1,
		PRODORIGINALPIC2,
		PRODORIGINALPIC3,
		PRODSAVEDPIC1,
		PRODSAVEDPIC2,
		PRODSAVEDPIC3,
		PRODINDATE
	)VALUES(
		PRODNUM_SQ.nextval,
		#{userId},
		#{chNum},
		#{prodCategory},
		#{prodTitle},
		#{prodStock},
		#{prodPrice},
		#{prodContent},
		#{prodOriginalPic1},
		#{prodOriginalPic2},
		#{prodOriginalPic3},
		'wash1.jpg',
		'wash2.jpg',
		'wash3.jpg',
		SYSDATE)
</insert>

<!-- 상품 삭제 -->
<delete id="prodDelete" parameterType="int">
	DELETE
		FROM
			E_PRODUCT_TB
		WHERE
			PRODNUM = #{prodNum}
</delete>

<!-- 상품 댓글 가져오기 -->
<select id="getProdComment" parameterType="int" resultType="prodComment">
	SELECT
		PRODCOMMENTNUM,
		USERID,
		PRODNUM,
		PRODCOMMENT
	FROM
		E_PRODUCTCOMMENT_TB
	WHERE
		PRODNUM = #{prodNum}

</select>

<!-- 유저타입 가져오기 (댓글창) -->
<select id="getUserType" parameterType="String" resultType="String">
	SELECT
		USERTYPE
	FROM
		E_USER_TB
	WHERE
		USERID = #{userId}
</select>

<!-- 상품 댓글 추가 -->
<insert id="addComment" parameterType="prodComment">

	<selectKey keyProperty="prodCommentNum" resultType="int" order="BEFORE">
		SELECT
			prodCommentNum_seq.nextval
		FROM
			dual
	</selectKey>
	INSERT INTO
		E_PRODUCTCOMMENT_TB(
			PRODCOMMENTNUM,
			USERID,
			PRODNUM,
			PRODCOMMENT
		)VALUES(
			#{prodCommentNum},
			#{userId},
			#{prodNum},
			#{prodComment})

</insert>

<!-- 카테고리 별 채널 리스트 -->
<select id="chCategoryResult" parameterType="int" resultType="channel">
	SELECT
		CHNUM,
		CHID,
		CHNAME,
		CHPROFILE,
		CHFOLLOWER,
		CHINTRO,
		CHINDATE
	FROM
		E_CHANNEL_TB
	WHERE
		CHID = (SELECT DISTINCT
					USERID
				FROM
					E_PRODUCT_TB
				WHERE
					PRODCATEGORY = #{categoryCode})
</select>

<!-- 검색 결과 -->
<select id="chSearch" parameterType="String" resultType="channel">
	SELECT
		CHNUM,
		CHID,
		CHNAME,
		CHPROFILE,
		CHFOLLOWER,
		CHINTRO,
		CHINDATE
	FROM
		E_CHANNEL_TB
	WHERE
		CHID IN (SELECT DISTINCT
					USERID
				FROM
					E_PRODUCT_TB
				WHERE
					PRODTITLE like '%'|| #{search} || '%')

</select>

<!-- 카테고리 정보 -->
<select id="getCategory" parameterType="product" resultType="category">
	SELECT
		ca.CATEGORYCODE as CATEGORYCODE,
		ca.CATEGORYNAME as CATEGORYNAME
	FROM
		E_CATEGORY_TB ca, E_PRODUCT_TB pr
	WHERE
		pr.PRODNUM = #{prodNum}
	AND
		ca.CATEGORYCODE = pr.PRODCATEGORY
</select>

<!-- 상품 정보 수정 -->
<update id="contentModify" parameterType="product">
	UPDATE
		E_PRODUCT_TB
	SET
		PRODCATEGORY = #{prodCategory},
		PRODTITLE = #{prodTitle},
		PRODSTOCK = #{prodStock},
		PRODPRICE = #{prodPrice},
		PRODCONTENT = #{prodContent},
		PRODINDATE = SYSDATE
	WHERE
		PRODNUM = #{prodNum}
</update>

<!-- 채널 정보 수정 -->
<update id="chModify" parameterType="channel">
	UPDATE
		E_CHANNEL_TB
	SET
		CHNAME = #{chName},
		<!-- CHPROFILE = #{chProfile}, -->
		CHINTRO =#{chIntro},
		CHPROFILE = #{chProfile},
		CHINDATE = SYSDATE
	WHERE
		CHID = #{chId}

</update>


<!-- AD 관련 출력 -->
<select id="selectChAd" resultType="hashmap">
select
		c.PRODNUM as PRODNUM,
		c.USERID as USERID,
		c.CHNUM as CHNUM,
		c.PRODCATEGORY as PRODCATEGORY,
		c.PRODTITLE as PRODTITLE,
		c.PRODCONTENT as PRODCONTENT,
		c.PRODORIGINALPIC1 as PRODORIGINALPIC1,
		c.PRODORIGINALPIC2 as PRODORIGINALPIC2,
		c.PRODORIGINALPIC3 as PRODORIGINALPIC3,
		c.PRODINDATE as PRODINDATE
from
	e_channel_tb c, e_ad_tb a
where
	e.prodNum = a.prodNum
</select>
</mapper>
